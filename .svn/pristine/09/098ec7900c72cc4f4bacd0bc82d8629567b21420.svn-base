package com.formalworks.test.ebook.web.service;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.List;

import com.formalworks.test.ebook.web.dao.EBook;
import com.formalworks.test.ebook.web.dao.MDFileWriter;


class MDFileWriterImp implements MDFileWriter {


	/**
	 * 출력 파일명에 새로운 파일명 부여
	 * 
	 * @param FilePath
	 * @return
	 */
	private String getNewFilePath(StringBuffer FilePath)
	{
		int fileNumCount = 1;

		StringBuffer tempFilePath = new StringBuffer(FilePath);

		int filePathLen = tempFilePath.lastIndexOf(".md"); //$NON-NLS-1$;

		while (new File(tempFilePath.toString()).exists())
		{
			fileNumCount++;
			tempFilePath.replace(filePathLen, tempFilePath.length(), "(" + fileNumCount + ")" + ".md"); //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$
		}

		return tempFilePath.toString();

	}


	/**
	 * 출력하려는 파일과 동일한 이름 파일 존재 시 새로운 파일명 지정
	 * 
	 * @param ebook
	 * @return
	 */
	@Override
	public String getUniqueOutputFilePath(String outputFilePath) {

		if (new File(outputFilePath).exists())
		{
			outputFilePath = getNewFilePath(new StringBuffer(outputFilePath));
		}

		return outputFilePath;

	}

	/**
	 * 매개변수 내용을 MD 파일로 기록한다.
	 * 
	 * @param outputFilePath
	 * @param contents
	 */
	@Override
	public void writeContents(String outputFilePath, List<String> contents) {
		FileOutputStream file;
		BufferedWriter wt;
		try {

			file = new FileOutputStream(outputFilePath);

			wt = new BufferedWriter(new OutputStreamWriter(file, "UTF-8")); //$NON-NLS-1$
			for (String i : contents) {
				wt.write(i);
				wt.newLine();
			}
			new File(outputFilePath).delete();
			wt.close();
			file.close();
		} catch (IOException e) {
			e.printStackTrace();
			// MD 파일로 기록하는 과정에서 오류 발생 시 기록중인 파일 삭제
		}

	}

	@Override
	public void write(EBook ebook) throws IOException {

		String outputFilePath = getUniqueOutputFilePath(ebook.getOutputMdFilePath());

		ebook.setOutputMdFilePath(outputFilePath);

		List<String> contents;

		if (ebook.getOptionAppliedMDContents() == null) {
			contents = ebook.getFullMDContents();
		} else {
			contents = ebook.getOptionAppliedMDContents();
		}

		writeContents(outputFilePath, contents);

	}

}